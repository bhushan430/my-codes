int binarysearch(vector<int>& arr,int s,int e,int k)
{
    int mid=s+(e-s)/2;
    while(s<=e)
    {
        if(arr[mid]==k)
        {
            return mid;
        }else
            if(arr[mid]<k)
            {
                s=mid+1;
            }else
                e=mid-1;
        
        mid=s+(e-s)/2;
    }
    return -1;
}

int pivotindex(vector<int>& arr, int n)
{
    int s=0,e=n-1;
    int mid=s+(e-s)/2;
    while(s<e)
    {
        if(arr[mid]>=arr[0])
        {
            s=mid+1;
        }else
            if(arr[mid]<arr[0])
            {
                e=mid;
            }
        mid=s+(e-s)/2;
    }
    //cout<<'s'<<s<<" ";
    return s;
}
int findPosition(vector<int>& arr, int n, int k)
{   int st=0,ed=n-1,pi,ans;
    pi=pivotindex(arr,n);
    if(arr[0]==k)
    {
        return 0;
    }else
        if(arr[0]>k)
        {
              st=pi;
           ans=binarysearch(arr,st,ed,k);
        } else
        {
            ed=pi-1;
              ans=binarysearch(arr,st,ed,k);
        }
 return ans;
           
}

